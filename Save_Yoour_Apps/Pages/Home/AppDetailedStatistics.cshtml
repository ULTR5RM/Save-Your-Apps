@page
@using Save_Yoour_Apps.Models;
@using Save_Yoour_Apps.Work;
@model Save_Yoour_Apps.Pages.Home.AppDetailedStatisticsModel
@{
}<head>
    <meta charset="UTF-8">
 
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../lib/bootstrap/dist/css/bootstrap-grid.css.map">
    <link rel="stylesheet" href="../lib/jquery/dist/jquery.min.js">
    <link rel="stylesheet" href="../css/site.css" asp-append-version="true" />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js"></script>
</head>
@using (Html.BeginForm("AppDetailedStatistics", "Home", FormMethod.Get)) {
    <fieldset>
      <div   class="text-center">
            Приложение: 
            @Html.DropDownList("AList")
            Временной период:
            @Html.DropDownList("TimePeriodList")
        <p>
            <input type="submit" value="Показать статистику" />
        </p>
        </div>
    </fieldset>
}
    @if (Model.CApp!=null) {
        <table class="table mt-5">
<tr><th style="width: 7%;">Название</th><th style="width: 20%;">Описание</th><th style="width: 8%;">Индентификатор</th><th style="width: 8%;">запросы POST</th><th style="width: 8%;">запросы GET</th><th style="width: 10%;">Дата создания</th></tr>
<tr><td>@(Model.CApp.Name)</td><td>@(Model.CApp.Desc)</td><td>@(Model.CApp.Identity)</td><td>@(Work.EventsWorker.GetEventList(Model.CApp.Identity, EventType.POST).Count)</td><td>@(Work.EventsWorker.GetEventList(Model.CApp.Identity, EventType.GET).Count)</td><td>@(Model.CApp.DateCreated.ToLongDateString())</td></tr> 
</table>
<div>
@if (Model.days > -1)
        {
            <script>
                var SetK = @Html.Raw(Json.Serialize(Model.GetKeys(Model.EventsDictDatePOST)));
                var SetV = @Html.Raw(Json.Serialize(Model.GetValues(Model.EventsDictDatePOST)));
                var ctxB = document.getElementById("barChart").getContext('2d');
                var myBarChart = new Chart(ctxB, {
                type: 'bar',
                data: {
                labels: SetK,
                datasets: [{
                label: 'Кол-во запросов POST за период',
                data: SetV,
                backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgb(158,213,236)',
                'rgba(255, 206, 86, 0.2)',
                'rgb(158,213,236))',
                'rgba(153, 102, 255, 0.2)',
                'rgb(158,213,236)'
                ],
                borderColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgb(158,213,236)',
                'rgba(255, 206, 86, 0.2)',
                'rgb(158,213,236)',
                'rgba(153, 102, 255, 0.2)',
                'rgb(158,213,236)'
                ],
                borderWidth: 1
                }]
                },
                options: {
                scales: {
                yAxes: [{
                ticks: {
                beginAtZero: true
                }
                }]
                }
                }
                });
            </script>
           <script>
                var SetK = @Html.Raw(Json.Serialize(Model.GetKeys(Model.EventsDictDateGET)));
                var SetV = @Html.Raw(Json.Serialize(Model.GetValues(Model.EventsDictDateGET)));
                var ctxB = document.getElementById("barChart2").getContext('2d');
                var myBarChart = new Chart(ctxB, {
                type: 'bar',
                data: {
                labels: SetK,
                datasets: [{
                label: 'Кол-во запросов GET  периоду',
                data: SetV,
                backgroundColor: [
                'rgb(158,213,236)',
                'rgba(54, 162, 235, 0.2)',
                'rgb(158,213,236)',
                'rgba(75, 192, 192, 0.2)',
                'rgb(158,213,236)',
                'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgb(158,213,236)',
                'rgba(255, 206, 86, 0.2)',
                'rgb(158,213,236)',
                'rgba(153, 102, 255, 0.2)',
                'rgb(158,213,236)'
                ],
                borderWidth: 1
                }]
                },
                options: {
                scales: {
                yAxes: [{
                ticks: {
                beginAtZero: true
                }
                }]
                }
                }
                });
            </script>
        }
         
        <body>
    <canvas id="pieChart" style="width: 80%; height: 80%"></canvas>
        @if (Model.days > -1)
        {
            <canvas id="barChart" style="width: 70%; height: 80%"></canvas>
            <canvas id="barChart2" style="width: 70%; height: 80%"></canvas>
        }
</body>
        <script>
    var ctxP = document.getElementById("pieChart").getContext('2d');
    var myPieChart = new Chart(ctxP, {
        type: 'pie',
        data: {
        labels: [" Запрос GET", "Запрос POST"],
        datasets: [{
            data: [@(Work.EventsWorker.GetEventList(Model.CApp.Identity, EventType.GET).Count), @(Work.EventsWorker.GetEventList(Model.CApp.Identity, EventType.POST).Count)],
            backgroundColor: ["#eca4e1", "#9ed5ec"],
            hoverBackgroundColor:  ["#eca4e1", "#9ed5ec"]
        }]
        },
        options: {
        responsive: true
        }
    });
</script>
    </div>

    
    }